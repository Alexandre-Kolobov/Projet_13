version: 2.1

jobs:
  test-and-lint:
    docker:
      - image: cimg/python:3.10.1  # To create container with python env and run inside it
    steps:
      - checkout  # To extract code from actual branch to container
      - run:  # To run a command like from a terminal
          name: install dependencies  # Name for this action
          command: pip install -r requirements.txt  # Command to run
      - run:
          name: lint
          command: flake8
      - run:
          name: run tests and validate the coverage is upper 80%
          command: pytest --cov=. --cov-fail-under=80

  build-docker-container:
    docker:
      - image: docker:latest  # Image includes Linux with installed docker

    steps:
      - checkout
      - setup_remote_docker  # Starts Docker deamon and allows to execute docker commands
      - run:
          name: Login to DockerHub
          command: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - run:
          name: Build Docker container
          command: docker build -t "$DOCKER_USER/p13_django_image:${CIRCLE_SHA1}" .
      - run:
          name: Push Docker Image
          command: docker push "$DOCKER_USER/p13_django_image:${CIRCLE_SHA1}"

  deploy-docker-image:
    machine:
      image: ubuntu-2004:202010-01

    steps:
      - checkout
      - run:
          name: Build and pushe docker image to Heroku
          command: |
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:login
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:push -a kolobov-p13 web
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:release -a kolobov-p13 web

workflows:
  build-and-test-workflow:
    jobs:
      - test-and-lint
      - build-docker-container:
          requires:
            - test-and-lint

      - deploy-docker-image:
          requires:
            - build-docker-container